<% path_to_delayed = local_assigns[:path] %>
<script type="text/javascript">

function doDelayedPageLoadRefresh() {
  alert('inside refresh')
  doDelayedPageLoad(true)
}
function doDelayedPageLoad(refreshCache) {
  //alert(refreshCache == true || refreshCache == 'true' ? 'tt' : 'ff')
  return new Promise((resolve, reject) => {
    let fullLoadUrl = '<%= path_to_delayed %>'.includes("?") ? `<%= path_to_delayed %>&refresh=${refreshCache}` : `<%= path_to_delayed %>?refresh=${refreshCache}` ;
    //alert(fullLoadUrl)

  $.ajax({ url: fullLoadUrl,
          type: 'GET',
          dataType: 'json',
          beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
          success: (response) => {
            return resolve({response:response})
          },
          error: (response) => {
            //alert(`Error fetching ${url}`)
            console.log(`Error fetching ${url}`)
            console.log(response)
            return reject({msg:'ERROR ajaxPromise 1',error:response})
          }
      });
  })

    return reject({msg:`RARE SERVER ERROR fetching {$url}`,error:'ERROR INFO'})
}

function addDivWrap(html,cacheUsed,css)
{
  const divCss = css + (cacheUsed ? '' : '') //'rounded border border-danger' : 'border border-success rounded'
  const cacheTitle = cacheUsed ? '<div class="text-center text-success fw-bold fs-8">From cache <a href="#" onlick="doDelayedPageLoadRefresh();" class="text-dark">Refresh</a></div>' : ''
  return `<div class='${divCss}'>${cacheTitle}${html}</div>`
}

(function() {
   // your page initialization code here
   // the DOM will be available here

let loadingHtml = '<div class="m-3"><div class="spinner-grow" role="status"><span class="visually-hidden">Loading...</span></div></div>'

let sections = {'sideMenu':'side_menu'} //{'subMenu':'sub_menu','sideMenu':'side_menu'}

    Object.keys(sections).forEach((k, i)=> {
      $("#"+k).html(loadingHtml)
    })

let res = doDelayedPageLoad(false)
.then((result) => {
  console.log(result)
  let cacheUsed = result.response.cache_used
  
  if(result.response.parts)
  {
    $("#subMenu").html(result.response.parts.sub_menu)
    $("#sideMenu").html(addDivWrap(result.response.parts.side_menu,cacheUsed,'animate__animated animate__fadeInLeft'))
  }
  else {
    $("#delayed").html(result.response.html)
  }
  })

})();



</script>